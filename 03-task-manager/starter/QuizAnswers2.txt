1. In this lesson, you created a middleware function called asyncWrapper. Why?
We have asynchronous operations, but without asyncWrapper they becomes redundant. Middleware asyncWrapper function wrapped all controllers and in there we set up our functionality
where we do not repeat ourselves. 

2. Complete the code:
const getTask = asyncWrapper(async (req, res, next) => {
  const { id: taskID } = req.params;
  const task = await Task.findOne({ _id: taskID });
  if (!task) {
    // your code here
  }
  res.status(200).json({ task });
});